devel
  - small update to allow building with Trilinos/Tpetra 14 (do not include private Kokkos headers)
  - cmake: make "PHIST_TRY_TO_PIN_THREADS=OFF" the default because nowadays, it's more useful to rely on MPI and/or OPenmP pinning unless you know exactly what you're doing
  - new linear solver: IDR(s)
  - fix bug in generating Fortran bindings (missing include path for Epetra/Tpetra kernel libs)
  - refactoring of cmake (some parts outsourced) to make it more readable)
  - refactor integration tests (now defined via cmake rather than a python script)
  
phist-1.11.2
  - use lapacke interface almost everywhere to improve portability (in particular for Cray libsci, which doesn't provide a lapack.h header)
  - fix another minor issue with Cray libsci
  - adjust deprecated Python code to support python 3.11
phist-1.11.0
  - clean up BLAS/LAPACK interface to allow building with OpenBLAS
  - fix a minor build error with Intel OneAPI Fortran compiler ifx
  - get rid of more deprecated tpetra code in case tpetra supports complex types
phist-1.10.0
  - get rid of some deprecated code in the phist/tpetra interface -- we will now require trilinos version >= 13
  - fix a cmake issue, data types supported by Trilinos and PETSc kernel libs should now be detected correctly
  - allow obtaining device pointer via mvec_extract_view
phist-1.9.5
  - update contact information Jonas Thies
  - builtin kernels now use mpi_f08 module (adds type safety and prevents errors with
  stricter fortran compilers)
  - minor bug fixes for Power9 systems
phist-1.9.4
  - better way of setting compiler flag -march=native or similar
    using cmake feature tests
  - const version of kernel functions mvec/sdMat_extract_view
  - when interfacing to Trilinos Belos and Anasazi, use their
    OrthoManager by default because the interface to our own seems to
    be buggy/broken and needs attention
phist-1.9.3
  - resolve pthreads dependency via gtest (assume pthreads available if OpenMP is) 
  - fix compiling with ghost but without MPI  

phist-1.9.2
  - fix some issues with Tpetra from Trilinos 13 (API change)
  - fix problem with Fortran interface and Tpetra

phist-1.9.1
  - builtin kernels: minor fix for gfortran 10
  - we do not bring our own pytest anymore
  - bugfix: timing was broken if neither MPI nor OpenMP were available
  
phist-1.9.0     update tpetra local/global index types to int/long long because the spack trilinos package offers to instantiate those variants
phist-1.8.0     bug fixes and added missing functions in the Python interface.
phist-1.7.5     patches for compiling on non-x86 architectures
phist.1.7.4     phist-1.7.4 has some new kernels and fixes to the Python interface so it can function as a backend PyNCT.
phist-1.7.4     fixes for xSDK 0.4.0 (dec'18) release, new cmake option PHIST_HOST_OPTIMIZE
phist-1.7.3     xSDK 0.4.0 release candidate (fall 2018)
phist-1.7.2     phist-1.7.2 is a between-releases version for the xSDK 0.4.0 (fall 2018) release
    Also has some improved xSDK compatibility like allowing to turn off host-specific optimizations via a CMake flag.

phist-1.6.1
    - performance fix for ghost
    - bug fixes to BiCGStab as a correction solver
    - fixes to high precision stuff
    - avoid reallocating temporary vectors in refactored jadaOp

phist-1.6.0
    - imporoved support for preconditioning,
    - a refactored jadaOp,
    - GPU support via ghost and tpetra
    - our own ortho manager for Anasazi and Belos

phist-1.5.2
    - development version (before refactoring of jadaOp)

phist-1.4.3
    - fix compilation with petsc+complex

phist-1.4.2     
    - various bug fixes concerning finding blas/lapack libs (in particular MKL and in combination with the spack package manager)

phist-1.4.1
    - minor bug fixes reg. cmake and hanging ghost tests

phist-1.4.0
    - updated Tpetra interface
    - improved support for generalized EVP
    - more linear solvers
    - a preconditioning interface

phist-1.2.0     
    - bug fixes
    
phist-1.0.0    
    - stable kernel and core interfaces
    - subspacejada as the primary eignesolver for exterior eigenpairs
    - iterative linear solvers GMRES and MINRES for use in Jacobi-Davidson
    - a simple preconditioning interface
    - CARP-CG as an alternative linear solver
    - support for GHOST 1.0.x (including hybrid CPU/GPU)
